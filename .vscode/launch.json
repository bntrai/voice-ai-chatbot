{{
    "steps": [
      {
        "step": "Create a GitHub Repository",
        "actions": [
          {
            "description": "Go to https://github.com.",
            "type": "navigate",
            "url": "https://github.com"
          },
          {
            "description": "Click the '+' icon in the top right corner and select 'New Repository'.",
            "type": "click"
          },
          {
            "description": "Give the repository a name, e.g., 'voice-ai-chatbot-backend', and click 'Create Repository'.",
            "type": "form_entry",
            "form_fields": {
              "name": "voice-ai-chatbot-backend",
              "public_or_private": "public"
            }
          }
        ]
      },
      {
        "step": "Launch GitHub Codespaces",
        "actions": [
          {
            "description": "On the repository page, click the 'Code' button (green button).",
            "type": "click",
            "element": "code_button"
          },
          {
            "description": "Select 'Codespaces' and then 'New Codespace'.",
            "type": "select_option",
            "option": "Codespaces > New Codespace"
          }
        ]
      },
      {
        "step": "Set Up the Project Environment in Codespaces",
        "actions": [
          {
            "description": "Initialize a new Node.js project by running `npm init -y` in the terminal.",
            "type": "run_command",
            "command": "npm init -y"
          },
          {
            "description": "Install required dependencies: Express, dotenv, and node-fetch.",
            "type": "run_command",
            "commands": [
              "npm install express dotenv node-fetch"
            ]
          }
        ]
      },
      {
        "step": "Create Files for Backend",
        "actions": [
          {
            "description": "Create a server script named 'server.js' to manage requests.",
            "type": "create_file",
            "file_name": "server.js"
          },
          {
            "description": "Create a .env file for storing API keys.",
            "type": "create_file",
            "file_name": ".env"
          }
        ]
      },
      {
        "step": "Write Backend Code in 'server.js'",
        "actions": [
          {
            "description": "Open 'server.js' and paste the server code that securely communicates with OpenAI.",
            "type": "edit_file",
            "file_name": "server.js",
            "content": "require('dotenv').config();\nconst express = require('express');\nconst fetch = require('node-fetch');\nconst bodyParser = require('body-parser');\n\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\n// Middleware\napp.use(bodyParser.json());\n\n// Endpoint to handle OpenAI requests\napp.post('/api/voice', async (req, res) => {\n    try {\n        const { audioBase64 } = req.body;\n\n        const response = await fetch('https://api.openai.com/v1/realtime/voice', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`\n            },\n            body: JSON.stringify({\n                audio: audioBase64,\n                content_type: 'audio/wav'\n            })\n        });\n\n        const data = await response.json();\n        res.json(data);\n    } catch (error) {\n        console.error('Error:', error);\n        res.status(500).json({ error: 'Internal Server Error' });\n    }\n});\n\napp.listen(PORT, () => {\n    console.log(`Server is running on http://localhost:${PORT}`);\n});"
          }
        ]
      },
      {
        "step": "Set Environment Variables",
        "actions": [
          {
            "description": "Add the OpenAI API key in the .env file.",
            "type": "edit_file",
            "file_name": ".env",
            "content": "OPENAI_API_KEY=your_openai_api_key_here"
          },
          {
            "description": "Add .env to .gitignore to prevent it from being pushed to the repository.",
            "type": "run_command",
            "command": "echo '.env' >> .gitignore"
          }
        ]
      },
      {
        "step": "Run the Backend Server in Codespaces",
        "actions": [
          {
            "description": "Run the server locally within Codespaces using `node server.js`.",
            "type": "run_command",
            "command": "node server.js"
          },
          {
            "description": "Forward the port so that the server is accessible from outside Codespaces.",
            "type": "click",
            "element": "port_forwarding_button"
          }
        ]
      },
      {
        "step": "Commit and Push Changes to GitHub",
        "actions": [
          {
            "description": "Stage the changes for commit.",
            "type": "run_command",
            "command": "git add ."
          },
          {
            "description": "Commit the changes with a descriptive message.",
            "type": "run_command",
            "command": "git commit -m 'Set up backend server for voice AI chatbot'"
          },
          {
            "de

        
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "chrome",
            "request": "launch",
            "name": "Open index.html",
            "file": "/workspaces/voice-ai-chatbot/index.html"
        }
    ]
}